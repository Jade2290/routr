global:
  region: default
  logsLevel: verbose
  otlExporter: http://jaeger:14268/api/traces
  postgresql:
    auth:
      username: routr
      password: changeit

postgresql:
  enabled: true
  auth:
    username: routr
    password: changeit

redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: false

# Connect Service defaults
rtprelay:
  rtpeHost: ""
  rtpPort: 22222
  image: 
    repository: fonoster/routr-rtprelay
    tag: latest
    pullPolicy: IfNotPresent
  podAnnotations: {}
  serviceAnnotations: {}    
  securityContext:
    runAsUser: 1000
    runAsGroup: 3000
    fsGroup: 2000
    allowPrivilegeEscalation: false
  resources:
    limits: {}
    requests: {}
  autoscaling:
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 50

# Connect Service defaults
apiserver:
  image: 
    repository: fonoster/routr-pgdata
    tag: latest
    pullPolicy: IfNotPresent
  podAnnotations: {}
  serviceAnnotations: {}    
  securityContext:
    runAsUser: 1000
    runAsGroup: 3000
    fsGroup: 2000
    allowPrivilegeEscalation: false
  resources:
    limits: {}
    requests: {}
  autoscaling:
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 50

# Connect Service defaults
connect:
  image: 
    repository: fonoster/routr-connect
    tag: latest
    pullPolicy: IfNotPresent
  podAnnotations: {}
  serviceAnnotations: {}    
  securityContext:
    runAsUser: 1000
    runAsGroup: 3000
    fsGroup: 2000
    allowPrivilegeEscalation: false
  resources:
    limits: {}
    requests: {}
  autoscaling:
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 50

# APIServer Service defaults
registry:
  registerInterval: 20
  cache: 
    provider: memory
    parameters: ""
  methods:
    - INVITE
    - MESSAGE 
  image:
    repository: fonoster/routr-registry
    tag: latest
    pullPolicy: IfNotPresent
  podAnnotations: {}
  serviceAnnotations: {}    
  securityContext:
    runAsUser: 1000
    runAsGroup: 3000
    fsGroup: 2000
    allowPrivilegeEscalation: false
  resources:
    limits: {}
    requests: {}
  autoscaling:
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 50

# EdgePort Service defaults
edgeport:
  externalAddrs: []
  methods:
    - REGISTER
    - MESSAGE
    - INVITE
    - ACK
    - BYE
    - CANCEL
  image: 
    repository: fonoster/routr-edgeport
    tag: latest
    pullPolicy: Always
  podAnnotations: {}
  serviceAnnotations: {}
  transport:
    tcp:
      enabled: true
      port: 5060
    udp:
      enabled: true
      port: 5060
    tls:
      enabled: false
      port: 5061
    ws:
      enabled: true
      port: 5062
    wss:
      enabled: false
      port: 5063
  replicas: 2
  minReadySeconds: 10
  terminationGracePeriodSeconds: 10
  securityContext:
    runAsUser: 1000
    runAsGroup: 3000
    fsGroup: 2000
    allowPrivilegeEscalation: false
  resources:
    limits: {}
    requests: {}

# Dispatcher Service defaults
dispatcher:
  image: 
    repository: fonoster/routr-dispatcher
    tag: latest
    pullPolicy: IfNotPresent
  podAnnotations: {}
  serviceAnnotations: {}    
  securityContext:
    runAsUser: 1000
    runAsGroup: 3000
    fsGroup: 2000
    allowPrivilegeEscalation: false
  resources:
    limits: {}
    requests: {}
  autoscaling:
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 50

# Location Service defaults
location:
  region: default
  cache: 
    provider: memory
    parameters: ""
  image: 
    repository: fonoster/routr-location
    tag: latest
    pullPolicy: IfNotPresent
  podAnnotations: {}
  serviceAnnotations: {}    
  securityContext:
    runAsUser: 1000
    runAsGroup: 3000
    fsGroup: 2000
    allowPrivilegeEscalation: false
  resources:
    limits: {}
    requests: {}
  autoscaling:
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 50

# Requester Service defaults
requester:
  image: 
    repository: fonoster/routr-requester
    tag: latest
    pullPolicy: IfNotPresent
  podAnnotations: {}
  serviceAnnotations: {}    
  securityContext:
    runAsUser: 1000
    runAsGroup: 3000
    fsGroup: 2000
    allowPrivilegeEscalation: false
  resources:
    limits: {}
    requests: {}
  autoscaling:
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 50