name: publish to docker hub (v2)

on:
  workflow_dispatch:
  workflow_call:

jobs:
  download_artifacts:
    name: Download Artifacts

    runs-on: ubuntu-latest

    steps:
      - name: Login to GitHub Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: routr-build
      - name: Get the current version
        shell: bash
        id: release
        run: echo "VERSION=$(node -e "console.log(require('./lerna.json').version)")" >> $GITHUB_OUTPUT
    outputs:
      version: ${{ steps.release.outputs.VERSION }}
  

  publish_edgeport_to_docker_hub:
    name: Publish EdgePort to Docker Hub
    
    runs-on: ubuntu-latest

    needs: [download_artifacts]
    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: routr-build
      - name: Publish the Edgeport image
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: fonoster/routr-edgeport
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          workdir: mods/edgeport
          tags: "latest,${{ needs.download_artifacts.outputs.VERSION }}"

  publish_dispatcher_to_docker_hub:
    name: Publish Dispatcher to Docker Hub
    
    runs-on: ubuntu-latest

    needs: [download_artifacts]
    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: routr-build
      - name: Publish the image
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: fonoster/routr-dispatcher
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          workdir: mods/dispatcher
          tags: "latest,${{ needs.download_artifacts.outputs.VERSION }}"

  publish_location_to_docker_hub:
    name: Publish Location to Docker Hub
    
    runs-on: ubuntu-latest

    needs: [download_artifacts]
    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: routr-build
      - name: Publish the image
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: fonoster/routr-location
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          workdir: mods/location
          tags: "latest,${{ needs.download_artifacts.outputs.VERSION }}"
          
  publish_connect_to_docker_hub:
    name: Publish Connect to Docker Hub
    
    runs-on: ubuntu-latest

    needs: [download_artifacts]
    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: routr-build
      - name: Publish the image
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: fonoster/routr-connect
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          workdir: mods/connect
          tags: "latest,${{ needs.download_artifacts.outputs.VERSION }}"
          
  publish_simpledata_to_docker_hub:
    name: Publish Simpledata to Docker Hub
    
    runs-on: ubuntu-latest

    needs: [download_artifacts]
    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: routr-build
      - name: Publish the image
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: fonoster/routr-simpledata
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          workdir: mods/simpledata
          tags: "latest,${{ needs.download_artifacts.outputs.VERSION }}"

  publish_requester_to_docker_hub:
    name: Publish Requester to Docker Hub
    
    runs-on: ubuntu-latest

    needs: [download_artifacts]
    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: routr-build
      - name: Publish the image
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: fonoster/routr-requester
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          workdir: mods/requester
          tags: "latest,${{ needs.download_artifacts.outputs.VERSION }}"

  publish_registry_to_docker_hub:
    name: Publish Registry to Docker Hub
    
    runs-on: ubuntu-latest

    needs: [download_artifacts]
    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: routr-build
      - name: Publish the image
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: fonoster/routr-registry
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          workdir: mods/registry
          tags: "latest,${{ needs.download_artifacts.outputs.VERSION }}"

  publish_pgdata_to_docker_hub:
    name: Publish the PGData image
    
    runs-on: ubuntu-latest

    needs: [download_artifacts]
    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: routr-build
      - name: Publish the image
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: fonoster/routr-pgdata
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          workdir: mods/pgdata
          tags: "latest,${{ needs.download_artifacts.outputs.VERSION }}"

  publish_pgdata_migrations_to_docker_hub:
    name: Publish the Postgres DB Migrations image
    
    runs-on: ubuntu-latest

    needs: [download_artifacts]
    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: routr-build
      - name: Publish the image
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: fonoster/routr-pgdata-migrations
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          workdir: mods/pgdata
          buildoptions: "--target migrations"
          tags: "latest,${{ needs.download_artifacts.outputs.VERSION }}"

  publish_echo_to_docker_hub:
    name: Publish the Echo image
    
    runs-on: ubuntu-latest

    needs: [download_artifacts]
    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: routr-build
      - name: Publish the image
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: fonoster/routr-echo
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          workdir: mods/echo
          tags: "latest,${{ needs.download_artifacts.outputs.VERSION }}"

  publish_rtprelay_to_docker_hub:
    name: Publish the RTPrelay image
    
    runs-on: ubuntu-latest

    needs: [download_artifacts]
    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: routr-build
      - name: Publish the image
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: fonoster/routr-rtprelay
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          workdir: mods/rtprelay
          tags: "latest,${{ needs.download_artifacts.outputs.VERSION }}"

