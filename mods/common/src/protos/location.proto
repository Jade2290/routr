syntax = "proto3";

package fonoster.routr.location.v2draft1;

option java_multiple_files = true;
option java_package = "io.routr.location";
option java_outer_classname = "LocationProto";
option objc_class_prefix = "LC";

import "common.proto";
import "processor.proto";

service Location {
  rpc AddRoute (AddRouteRequest) returns (fonoster.routr.common.v2draft1.Empty) {}
  rpc FindRoutes (FindRoutesRequest) returns (FindRoutesResponse) {}
  rpc RemoveRoutes (RemoveRoutesRequest) returns (fonoster.routr.common.v2draft1.Empty) {}
}

// A binding create by an actual endpoint (Softphone, PBX, Conference System, etc.)
message Route {
  string user = 1;
  string host = 2;
  string port = 3;
  fonoster.routr.common.v2draft1.Transport transport = 4;
  int64 registered_on = 5;
  int32 expires = 6;
  int32 session_count = 7;
  string edge_port_ref = 8;
  fonoster.routr.processor.v2draft1.NetInterface listening_point = 9;
  // During route creation, an endpoint can requet to add labels than can later be
  // used as selector. For example, a Softphone can add a label `priority=1` to indicate
  // that it is the prefer endpoint for the given AOR. 
  //
  // Another use case is to use the label to determine which endpoint will back certain 
  // feature. For example, we could use the label `backend=voice` to indicate that this
  // route can serve voice applications. If the FindRoutes method includes the label the 
  // Location Service will only return routes that includes such label.
  map<string, string> labels = 10;
}

message AddRouteRequest {
  // Address of record for the endpoint or trunk
  string aor = 1;
  Route route = 2;
}

message FindRoutesRequest {
  string aor = 1;
  map<string, string> labels = 2;
}

message FindRoutesResponse {
  repeated Route routes = 1;
}

message RemoveRoutesRequest {
  string aor = 1;
}