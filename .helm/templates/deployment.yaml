apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include ".helm.fullname" . }}
  labels:
    {{- include ".helm.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include ".helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include ".helm.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: edgeport
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: edgePortRef
          value: random-value
        - name: CONFIG_PATH
          value: /etc/routr/edgeport.json
        - name: LOG4J2
          value: /etc/routr/log4j2.yml
        - name: LOGS_LEVEL
          value: verbose
        ports:
        {{- if eq .Values.udpSignalingService.enabled true }}
        - name: {{ .Values.udpSignalingService.name }}
          containerPort: {{ .Values.udpSignalingService.containerPort | default .Values.udpSignalingService.port }}
          protocol: UDP
        {{- end }}
        {{- if eq .Values.tcpSignalingService.enabled true }}
        {{- range .Values.tcpSignalingService.ports }}
        - name: {{ .name }}
          containerPort: {{ .containerPort | default .port }}
          protocol: TCP
        {{- end }}
        {{- end }}                         
        volumeMounts:
        - name: config
          mountPath: /etc/routr/log4j2.yml
          subPath: log4j2.yml
        - name: config
          mountPath: /etc/routr/edgeport.json
          subPath: edgeport.json
        - name: certificates
          mountPath: /etc/routr/domains-cert.jks
          subPath: domains-cert.jks
          readOnly: true
      - name: dispatcher
        image: "{{ .Values.dispatcher.image.repository }}:{{ .Values.dispatcher.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: CONFIG_PATH
          value: /etc/routr/dispatcher.json
        - name: LOGS_LEVEL
          value: verbose
        volumeMounts:
        - name: config
          mountPath: /etc/routr/dispatcher.json
          subPath: dispatcher.json
      - name: echo
        image: "{{ .Values.echo.image.repository }}:{{ .Values.echo.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: LOGS_LEVEL
          value: verbose
      volumes:
      - name: config
        configMap:
          name: {{ include ".helm.fullname" . }}-config
      - name: certificates
        secret:
          secretName: routr-domains-certificates